""" Николай – оригинальный человек. Он решил создать класс Nikola, принимающий при инициализации 2 параметра:
 имя и возраст. Но на этом он не успокоился. Не важно, какое имя передаст пользователь при создании экземпляра,
  оно всегда будет содержать Николая. В частности - если пользователя на самом деле зовут Николаем, то с именем ничего
  не произойдет, а если его зовут, например, Максим, то оно преобразуется в Я не Максим, а Николай.

Более того, никаких других атрибутов и методов у экземпляра не может быть добавлено, даже если кто-то и вздумает так
поступить (т.е. если некий пользователь решит прибавить к экземпляру свойство отчество или метод приветствие,
 то ничего у такого хитреца не получится)."""

from dataclasses import dataclass  # импортируем библиотеку датаклассов


@dataclass
class Nikola:

    try:
        age: int
        name: str

        __slots__ = ['age', 'name']   # ограничваем атрибуты всего двумя полями

        def __post_init__(self):   # проверяем введенной имя, если ненужное то меняем назад на Николая
            if self.name != 'Николай':
                print(f'Я не {self.name}, я Николай')
                self.name = 'Николай'

    except AttributeError:
        print('А-та-та. Класс защищен от ввода лишних атрибутов')


nikola = Nikola(21, 'Саша')
print(f'{nikola}\n')


nikola = Nikola(37, 'Николай')
print(f'{nikola}\n')

nikola.surname = 'Петров'